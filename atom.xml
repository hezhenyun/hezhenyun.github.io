<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>浮生醉清风</title>
  
  <subtitle>没有比脚更长的路，走过去，前面是个天！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-15T14:03:11.686Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Throb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用hexo+github搭建免费博客教程</title>
    <link href="http://yoursite.com/2019/11/15/hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/11/15/hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</id>
    <published>2019-11-15T13:51:34.038Z</published>
    <updated>2019-11-15T14:03:11.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>使用github pages服务搭建博客的好处有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ 全是静态文件，访问速度快；</span><br><span class="line">$ 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">$ 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line">$ 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">$ 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">$ 等等；</span><br></pre></td></tr></table></figure><h3 id="1-1-准备工作"><a href="#1-1-准备工作" class="headerlink" title="1.1.准备工作"></a>1.1.准备工作</h3><p>在开始一切之前，你必须已经：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ 有一个github账号，没有的话去注册一个；</span><br><span class="line">$ 安装了node.js、npm，并了解相关基础知识；</span><br><span class="line">$ 安装了git <span class="keyword">for</span> windows（或者其它git客户端）</span><br></pre></td></tr></table></figure><h2 id="2-搭建github博客"><a href="#2-搭建github博客" class="headerlink" title="2.搭建github博客"></a>2.搭建github博客</h2><h3 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1.创建仓库"></a>2.1.创建仓库</h3><p>新建一个名为”你的用户名.github.io”的仓库，比如说，如果你的github用户名是test，那么你就新建”test.github.io”的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a> 了，是不是很方便？<br>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>几个注意的地方：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ 注册的邮箱一定要验证，否则不会成功；</span><br><span class="line">$ 仓库名字必须是：username.github.io，其中username是你的用户名；</span><br><span class="line">$ 仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</span><br></pre></td></tr></table></figure><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h2 id="3-配置SSH-Key"><a href="#3-配置SSH-Key" class="headerlink" title="3.配置SSH Key"></a>3.配置SSH Key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮件地址"</span></span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到”.ssh\id_rsa.pub”文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：<br>将刚复制的内容粘贴到key那里，title随便填，保存。</p><h3 id="3-1-测试是否成功"><a href="#3-1-测试是否成功" class="headerlink" title="3.1.测试是否成功"></a>3.1.测试是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi liuxianan! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>看到这个信息说明SSH已配置成功！<br>此时你还需要配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"liuxianan"</span>// 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  <span class="string">"xxx@qq.com"</span>// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>具体这个配置是干嘛的我没仔细深究。</p><h2 id="4-hexo的使用和注意事项"><a href="#4-hexo的使用和注意事项" class="headerlink" title="4.hexo的使用和注意事项"></a>4.hexo的使用和注意事项</h2><h3 id="4-1-hexo简介"><a href="#4-1-hexo简介" class="headerlink" title="4.1.hexo简介"></a>4.1.hexo简介</h3><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p>官网： <a href="http://hexo.io" target="_blank" rel="noopener">http://hexo.io</a><br>github: <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></p><h3 id="4-2-原理"><a href="#4-2-原理" class="headerlink" title="4.2.原理"></a>4.2.原理</h3><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h3 id="4-3-注意事项"><a href="#4-3-注意事项" class="headerlink" title="4.3.注意事项"></a>4.3.注意事项</h3><p>安装之前先来说几个注意事项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ 很多命令既可以用Windows的cmd来完成，也可以使用git  </span><br><span class="line">$ bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</span><br><span class="line"><span class="variable">$hexo</span>不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</span><br><span class="line">hexo有2种<span class="string">"_config.yml"</span>文件，一个是根目录下的全局的<span class="string">"_config.yml"</span>，一个是各个theme下的；</span><br></pre></td></tr></table></figure><h3 id="4-4-安装"><a href="#4-4-安装" class="headerlink" title="4.4.安装"></a>4.4.安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="4-5-初始化"><a href="#4-5-初始化" class="headerlink" title="4.5.初始化"></a>4.5.初始化</h3><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是”F:\Workspaces\hexo”，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>hexo s是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了</p><p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑</p><h3 id="4-6-上传之前"><a href="#4-6-上传之前" class="headerlink" title="4.6.上传之前"></a>4.6.上传之前</h3><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h3 id="4-7-上传到github"><a href="#4-7-上传到github" class="headerlink" title="4.7.上传到github"></a>4.7.上传到github</h3><p>如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。</p><p>首先，”ssh key”肯定要配置好。</p><p>其次，配置”_config.yml”中有关deploy的部分：</p><p>正确写法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>错误写法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: github</span><br><span class="line">  repository: https://github.com/liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="4-8-常用hexo命令"><a href="#4-8-常用hexo命令" class="headerlink" title="4.8.常用hexo命令"></a>4.8.常用hexo命令</h3><p>   常见命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><p>   缩写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>   组合命令</p><pre><code class="bash">hexo s -g <span class="comment">#生成并本地预览</span>hexo d -g <span class="comment">#生成并上传</span></code></pre><h2 id="5-最终效果"><a href="#5-最终效果" class="headerlink" title="5.最终效果"></a>5.最终效果</h2><p>可以访问我的git博客来查看效果：<a href="https://hezhenyun.github.io/" target="_blank" rel="noopener">https://hezhenyun.github.io/</a></p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6.参考"></a>6.参考</h2><p>博客园：<a href="http://www.cnblogs.com/liuxianan" target="_blank" rel="noopener">http://www.cnblogs.com/liuxianan</a><br>copyright ©2012-2018 小茗同学</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;使用github pages服务搭建博客的好处有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mysql命令基础大全</title>
    <link href="http://yoursite.com/2019/11/15/mysql%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/11/15/mysql%E5%91%BD%E4%BB%A4/</id>
    <published>2019-11-15T07:14:54.974Z</published>
    <updated>2019-11-13T10:33:05.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需知"><a href="#需知" class="headerlink" title="需知"></a>需知</h2><p>以下是整理的一些基础的Mysql的命令<br>如果还需要深层的探索可以转接此地址<a href="https://www.mysql.com" target="_blank" rel="noopener">Mysql官网</a></p><h2 id="Mysql命令锦集"><a href="#Mysql命令锦集" class="headerlink" title="Mysql命令锦集"></a>Mysql命令锦集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">　mysql -h主机地址 -u用户名 －p密码 连接MYSQL;如果刚安装好MYSQL，超级用户root是没有密码的。</span><br><span class="line">　　（例：mysql -h110.110.110.110 -Uroot -P123456</span><br><span class="line">　　注:u与root可以不用加空格，其它也一样）</span><br><span class="line">　　<span class="built_in">exit</span> 退出MYSQL</span><br><span class="line">　　mysqladmin -u用户名 -p旧密码 password 新密码 修改密码</span><br><span class="line">　　grant select on 数据库.* to 用户名@登录主机 identified by <span class="string">"密码"</span>; 增加新用户。（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）</span><br><span class="line">　　show databases; 显示数据库列表。刚开始时才两个数据库：mysql和<span class="built_in">test</span>。mysql库很重要它里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</span><br><span class="line">　　use mysql；</span><br><span class="line">　　show tables; 显示库中的数据表</span><br><span class="line">　　describe 表名; 显示数据表的结构</span><br><span class="line">　　create database 库名; 建库</span><br><span class="line">　　use 库名；</span><br><span class="line">　　create table 表名 (字段设定列表)； 建表</span><br><span class="line">　　drop database 库名;</span><br><span class="line">　　drop table 表名； 删库和删表</span><br><span class="line">　　delete from 表名; 将表中记录清空</span><br><span class="line">　　select * from 表名; 显示表中的记录</span><br><span class="line">　　mysqldump --opt school&gt;school.bbb 备份数据库：（命令在DOS的mysqlin目录下执行）;注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。</span><br><span class="line">　　win2003系统下新增命令（实用部份）：</span><br><span class="line">　　shutdown /参数 关闭或重启本地或远程主机。</span><br><span class="line">　　参数说明：/S 关闭主机，/R 重启主机， /T 数字 设定延时的时间，范围0～180秒之间， /A取消开机，/M //IP 指定的远程主机。</span><br><span class="line">　　例：shutdown /r /t 0 立即重启本地主机（无延时）</span><br><span class="line">　　taskill /参数 进程名或进程的pid 终止一个或多个任务和进程。</span><br><span class="line">　　参数说明：/PID 要终止进程的pid,可用tasklist命令获得各进程的pid，/IM 要终止的进程的进程名，/F 强制终止进程，/T 终止指定的进程及他所启动的子进程。</span><br><span class="line">　　tasklist 显示当前运行在本地和远程主机上的进程、服务、服务各进程的进程标识符(PID)。</span><br><span class="line">　　参数说明：/M 列出当前进程加载的dll文件，/SVC 显示出每个进程对应的服务，无参数时就只列出当前的进程。</span><br><span class="line">　　Linux系统下基本命令　注：要区分大小写</span><br><span class="line">　　uname 显示版本信息（同win2K的 ver）</span><br><span class="line">　　dir 显示当前目录文件,ls -al 显示包括隐藏文件（同win2K的 dir）</span><br><span class="line">　　<span class="built_in">pwd</span> 查询当前所在的目录位置</span><br><span class="line">　　<span class="built_in">cd</span> <span class="built_in">cd</span>　..回到上一层目录，注意<span class="built_in">cd</span> 与..之间有空格。<span class="built_in">cd</span>　/返回到根目录。</span><br><span class="line">　　cat 文件名 查看文件内容</span><br><span class="line">　　cat &gt;abc.txt 往abc.txt文件中写上内容。</span><br><span class="line">　　more 文件名 以一页一页的方式显示一个文本文件。</span><br><span class="line">　　cp 复制文件</span><br><span class="line">　　mv 移动文件</span><br><span class="line">　　rm 文件名 删除文件，rm -a 目录名删除目录及子目录</span><br><span class="line">　　mkdir 目录名 建立目录</span><br><span class="line">　　rmdir 删除子目录，目录内没有文档。</span><br><span class="line">　　chmod 设定档案或目录的存取权限</span><br><span class="line">　　grep 在档案中查找字符串</span><br><span class="line">　　diff 档案文件比较</span><br><span class="line">　　find 档案搜寻</span><br><span class="line">　　date 现在的日期、时间</span><br><span class="line">　　who 查询目前和你使用同一台机器的人以及Login时间地点</span><br><span class="line">　　w 查询目前上机者的详细资料</span><br><span class="line">　　whoami 查看自己的帐号名称</span><br><span class="line">　　groups 查看某人的Group</span><br><span class="line">　　passwd 更改密码</span><br><span class="line">　　<span class="built_in">history</span> 查看自己下过的命令</span><br><span class="line">　　ps 显示进程状态</span><br><span class="line">　　<span class="built_in">kill</span> 停止某进程</span><br><span class="line">　　gcc 黑客通常用它来编译C语言写的文件</span><br><span class="line">　　su 权限转换为指定使用者</span><br><span class="line">　　telnet IP telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。</span><br><span class="line">　　ftp ftp连接上某服务器（同win2K）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需知&quot;&gt;&lt;a href=&quot;#需知&quot; class=&quot;headerlink&quot; title=&quot;需知&quot;&gt;&lt;/a&gt;需知&lt;/h2&gt;&lt;p&gt;以下是整理的一些基础的Mysql的命令&lt;br&gt;如果还需要深层的探索可以转接此地址&lt;a href=&quot;https://www.mysql.com
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows CMD命令大全</title>
    <link href="http://yoursite.com/2019/11/15/cmd%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2019/11/15/cmd%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2019-11-15T07:14:54.967Z</published>
    <updated>2019-11-13T01:38:38.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令简介"><a href="#命令简介" class="headerlink" title="命令简介"></a>命令简介</h2><p>cmd是command的缩写.即命令行 。</p><p>虽然随着计算机产业的发展，Windows 操作系统的应用越来越广泛，DOS 面临着被淘汰的命运，但是因为它运行安全、稳定，有的用户还在使用，所以一般Windows 的各种版本都与其兼容，用户可以在Windows 系统下运行DOS，中文版Windows XP 中的命令提示符进一步提高了与DOS 下操作命令的兼容性，用户可以在命令提示符直接输入中文调用文件。</p><p>　　在9x系统下输入command就可以打开命令行.而在NT系统上可以输入cmd来打开，在windows2003后被cmd替代，利用CMD命令查询系统的信息或者是判断网络的好坏。</p><h2 id="运行操作"><a href="#运行操作" class="headerlink" title="运行操作"></a>运行操作</h2><h3 id="CMD命令：开始－-gt-运行－-gt-键入cmd或command-在命令行里可以看到系统版本、文件系统版本"><a href="#CMD命令：开始－-gt-运行－-gt-键入cmd或command-在命令行里可以看到系统版本、文件系统版本" class="headerlink" title="CMD命令：开始－&gt;运行－&gt;键入cmd或command(在命令行里可以看到系统版本、文件系统版本)"></a>CMD命令：开始－&gt;运行－&gt;键入cmd或command(在命令行里可以看到系统版本、文件系统版本)</h3><h2 id="CMD命令锦集"><a href="#CMD命令锦集" class="headerlink" title="CMD命令锦集"></a>CMD命令锦集</h2><pre><code class="bash">1. gpedit.msc-----组策略　　2. sndrec32-------录音机　　3. Nslookup-------IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。　　4. explorer-------打开资源管理器　　5. logoff---------注销命令　　6. shutdown-------60秒倒计时关机命令　　7. lusrmgr.msc----本机用户和组　　8. services.msc---本地服务设置　　9. oobe/msoobe /a----检查XP是否激活　　10. notepad--------打开记事本　　11. cleanmgr-------垃圾整理　　12. net start messenger----开始信使服务　　13. compmgmt.msc---计算机管理　　14. net stop messenger-----停止信使服务　　15. conf-----------启动netmeeting　　16. dvdplay--------DVD播放器　　17. charmap--------启动字符映射表　　18. diskmgmt.msc---磁盘管理实用程序　　19. calc-----------启动计算器　　20. dfrg.msc-------磁盘碎片整理程序　　21. chkdsk.exe-----Chkdsk磁盘检查　　22. devmgmt.msc--- 设备管理器　　23. regsvr32 /u *.dll----停止dll文件运行　　24. drwtsn32------ 系统医生　　25. rononce -p----15秒关机　　26. dxdiag---------检查DirectX信息　　27. regedt32-------注册表编辑器　　28. Msconfig.exe---系统配置实用程序　　29. rsop.msc-------组策略结果集　　30. mem.exe--------显示内存使用情况　　31. regedit.exe----注册表　　32. winchat--------XP自带局域网聊天　　33. progman--------程序管理器　　34. winmsd---------系统信息　　35. perfmon.msc----计算机性能监测程序　　36. winver---------检查Windows版本　　37. sfc /scannow-----扫描错误并复原　　38. taskmgr-----任务管理器（2000/xp/2003　　40. wmimgmt.msc----打开windows管理体系结构(WMI)　　41. wupdmgr--------windows更新程序　　42. wscript--------windows脚本宿主设置　　43. write----------写字板　　45. wiaacmgr-------扫描仪和照相机向导　　46. winchat--------XP自带局域网聊天　　49. mplayer2-------简易widnows media player　　50. mspaint--------画图板　　51. mstsc----------远程桌面连接　　53. magnify--------放大镜实用程序　　54. mmc------------打开控制台　　55. mobsync--------同步命令　　57. iexpress-------木马捆绑工具，系统自带　　58. fsmgmt.msc-----共享文件夹管理器　　59. utilman--------辅助工具管理器　　61. dcomcnfg-------打开系统组件服务　　62. ddeshare-------打开DDE共享设置　　110. osk------------打开屏幕键盘　　111. odbcad32-------ODBC数据源管理器　　112. oobe/msoobe /a----检查XP是否激活　　68. ntbackup-------系统备份和还原　　69. narrator-------屏幕“讲述人”　　70. ntmsmgr.msc----移动存储管理器　　71. ntmsoprq.msc---移动存储管理员操作请求　　72. netstat -an----(TC)命令检查接口　　73. syncapp--------创建一个公文包　　74. sysedit--------系统配置编辑器　　75. sigverif-------文件签名验证程序　　76. ciadv.msc------索引服务程序　　77. shrpubw--------创建共享文件夹　　78. secpol.msc-----本地安全策略　　79. syskey---------系统加密，一旦加密就不能解开，保护windows xp系统的双重密码　　80. services.msc---本地服务设置　　81. Sndvol32-------音量控制程序　　82. sfc.exe--------系统文件检查器　　83. sfc /scannow---windows文件保护　　84. ciadv.msc------索引服务程序　　85. tourstart------xp简介（安装完成后出现的漫游xp程序）　　86. taskmgr--------任务管理器　　87. eventvwr-------事件查看器　　88. eudcedit-------造字程序　　89. compmgmt.msc---计算机管理　　90. packager-------对象包装程序　　91. perfmon.msc----计算机性能监测程序　　92. charmap--------启动字符映射表　　93. cliconfg-------SQL SERVER 客户端网络实用程序　　94. Clipbrd--------剪贴板查看器　　95. conf-----------启动netmeeting　　96. certmgr.msc----证书管理实用程序　　97. regsvr32 /u *.dll----停止dll文件运行　　98. regsvr32 /u zipfldr.dll------取消ZIP支持　　99. cmd.exe--------CMD命令提示符</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命令简介&quot;&gt;&lt;a href=&quot;#命令简介&quot; class=&quot;headerlink&quot; title=&quot;命令简介&quot;&gt;&lt;/a&gt;命令简介&lt;/h2&gt;&lt;p&gt;cmd是command的缩写.即命令行 。&lt;/p&gt;
&lt;p&gt;虽然随着计算机产业的发展，Windows 操作系统的应用越来越广泛
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/11/15/hello-world/"/>
    <id>http://yoursite.com/2019/11/15/hello-world/</id>
    <published>2019-11-15T02:57:43.525Z</published>
    <updated>2019-11-15T02:57:43.525Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>你好,欢迎来到我的博客</title>
    <link href="http://yoursite.com/2019/10/14/%E4%BD%A0%E5%A5%BD-Hexo/"/>
    <id>http://yoursite.com/2019/10/14/%E4%BD%A0%E5%A5%BD-Hexo/</id>
    <published>2019-10-14T06:48:00.000Z</published>
    <updated>2019-10-19T05:53:14.142Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
